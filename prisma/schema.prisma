generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
<<<<<<< HEAD
    id       String  @id @default(uuid()) @map("_id")
    name     String?
    email    String? @unique
    password String
    // emailVerified DateTime?
    // image         String?
    // accounts      Account[]
    // sessions      Session[]
=======
    id            String    @id @default(uuid()) @map("_id")
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    password      String? // Add this line for password storage
    accounts      Account[]
    sessions      Session[]
>>>>>>> 578c072aa84aff88161830c5713e43b8fb01bc5e
}

model Account {
    id                String  @id @default(uuid()) @map("_id")
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    // user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(uuid()) @map("_id")
    sessionToken String   @unique
    userId       String
    expires      DateTime
    // user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    id         String   @id @default(uuid()) @map("_id")
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
